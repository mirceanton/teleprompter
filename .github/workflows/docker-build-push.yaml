---
name: Build and Push Docker Images
permissions:
  contents: read
  packages: write

on:
  pull_request:
    paths:
      - 'backend/**'
      - 'controller/**'
      - 'landing/**'
      - 'teleprompter/**'
  release: { types: [ created ] }
  workflow_dispatch:
    inputs:
      push:
        description: 'Push the Docker images to the registry'
        type: boolean
        default: false
      service:
        description: 'Specific service to build (leave empty to build all services)'
        type: string
        required: false

jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Generate matrix for services
        id: set-matrix
        run: |
          # Define the service directories
          services='["backend", "controller", "landing", "teleprompter"]'
          
          # If a specific service is requested, filter to just that one
          if [[ -n "${{ github.event.inputs.service }}" ]]; then
            if [[ "$services" == *"${{ github.event.inputs.service }}"* ]]; then
              services='["${{ github.event.inputs.service }}"]'
            else
              services='[]'
            fi
          fi
          
          # For pull requests, only include services that have changes
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            changed_services=()
            for service in backend controller landing teleprompter; do
              if git diff --name-only ${{ github.event.pull_request.base.sha }}...${{ github.event.pull_request.head.sha }} | grep -q "^${service}/"; then
                changed_services+=("\"$service\"")
              fi
            done
            if [[ ${#changed_services[@]} -gt 0 ]]; then
              services="[$(IFS=,; echo "${changed_services[*]}")]"
            else
              services='[]'
            fi
          fi
          
          echo "matrix={\"directory\":$services}" >> $GITHUB_OUTPUT

  build-and-push:
    runs-on: ubuntu-latest
    needs: generate-matrix
    strategy:
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3.5.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate Metadata
        uses: docker/metadata-action@v5.8.0
        id: meta
        with:
          images: ghcr.io/${{ github.repository }}-${{ matrix.directory }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=sha

      - name: Build and push Docker image
        uses: docker/build-push-action@v6.18.0
        with:
          context: ./${{ matrix.directory }}
          push: ${{ github.event_name == 'release' || (github.event_name == 'workflow_dispatch' && github.event.inputs.push == 'true') }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
